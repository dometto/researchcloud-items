---
name: Changes
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  define_scenarios:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get changed roles
        id: changed-roles
        uses: tj-actions/changed-files@v40
        with:
          dir_names: true
          dir_names_max_depth: 3
          files: |
              playbooks/roles/**/**
      - name: Get changed scenarios
        id: changed-scenarios
        uses: tj-actions/changed-files@v40
        with:
          dir_names: true
          dir_names_max_depth: 2
          files: |
              molecule/playbook-*/*.yml
              molecule/role-*/*.yml
      - name: Get changed playbooks
        id: changed-playbooks
        uses: tj-actions/changed-files@v40
        with:
          files: |
              playbooks/*.yml
      - name: Set matrix based on changed files
        id: set-scenario-matrix
        run: |
          ROLES=(${{ steps.changed-roles.outputs.all_changed_files }})
          echo "DEBUG ROLES: " $ROLES[*]
          ROLES=("${ROLES[@]/#playbooks\/roles\//role-}") # playbooks/roles/foo -> role-foo
          echo "DEBUG ROLES: " $ROLES[*]

          PLAYBOOKS=(${{ steps.changed-playbooks.outputs.all_changed_files }})
          echo "DEBUG PLAYBOOKS: $PLAYBOOKS[*]"
          PLAYBOOKS=("${PLAYBOOKS[@]/#playbooks\//playbook-}") # playbooks/foo.yml -> playbook-foo.yml
          PLAYBOOKS=("${PLAYBOOKS[@]/%.yml/}") # playbook-foo.yml -> playbook-foo
          echo "DEBUG PLAYBOOKS: $PLAYBOOKS[*]"

          SCENARIOS=(${{ steps.changed-scenarios.outputs.all_changed_files }})
          echo "DEBUG SCENARIOS: " $SCENARIOS[*]
          SCENARIOS=("${SCENARIOS[@]/#molecule\//}") # molecule/playbook-foo -> playbook-foo
          echo "DEBUG SCENARIOS: " $SCENARIOS[*]

          ALL_CHANGES="$PLAYBOOKS[*] $ROLES[*] $SCENARIOS[*]"
          echo "DEBUG ALL_CHANGES: $ALL_CHANGES"

          # Construct a unique bash array out of ALL_CHANGES
          MATRIX=($(echo "$ALL_CHANGES" | xargs -n 1 | sort -u))

          # Create a valid json array out of the bash array using jq
          MATRIX=$(printf '%s\n' "${MATRIX[@]}" | jq -R . | jq -c -s .)

          # Store the results
          echo matrix={\"scenarios\": $MATRIX} >> $GITHUB_OUTPUT
          echo scenarios=$MATRIX >> $GITHUB_OUTPUT
          echo "DEBUG SCENARIOS: $MATRIX"
